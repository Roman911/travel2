# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: RootQuery
  mutation: RootMutation
}

type AuthData {
  avatar: String
  name: String
  token: String!
  tokenExpiration: Int!
  userId: ID!
}

type Author {
  _id: ID!
  avatar: String
  name: String
}

type Event {
  _id: ID!
  creator: User!
  date: String!
  description: String!
  price: Float!
  title: String!
}

type Post {
  _id: ID!
  author: Author!
  coordinates: [String]
  coverNews: String
  coverPost: String
  createdAt: String
  link: String
  price: String
  small_text: String
  tags: [String]
  text: String
  title: String
  type_material: String
  views: Int
}

type RootMutation {
  cancelPost(postId: ID!): Event!
  createEvent(eventInput: EventInput): Event
  createPost(postInput: PostInput): Post
  createUser(userInput: UserInput): User
  postEvent(eventId: ID!): Post!
}

type RootQuery {
  events: [Event!]!
  login(email: String!, password: String!): AuthData!
  post(_id: ID!): Post!
  posts: [Post!]!
}

type User {
  _id: ID!
  email: String!
  password: String
}

input EventInput {
  date: String!
  description: String!
  price: Float!
  title: String!
}

input PostInput {
  coordinates: [String]
  coverNews: String
  coverPost: String
  idAuthor: ID
  link: String
  photo: String
  price: String
  small_text: String
  tags: [String]
  text: String
  title: String
  type_material: String
}

input UserInput {
  email: String!
  name: String!
  password: String!
}
